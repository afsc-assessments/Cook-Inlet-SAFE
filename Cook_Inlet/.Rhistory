ACL= Table$ACL
Run=Table['Run']
Esc=Table['Esc']
Esc_goal=Table['Esc.Goal']
years=Table['Year']
sib_forecast <- NULL
#Calculate ACL Buffer
#Now execute the buffer function to emprically determine the buffer based on retrospective skill
buffer <- buffer_fun(ACL_buffer_window=ACL_buffer_window, y_obj=y_obj, sib_forecast=sib_forecast,
C_total=C_total, C_EEZ=C_EEZ,F_EEZ = F_EEZ, MFMT = MFMT,
ACL= ACL,Run=Run, Esc=Esc, Esc_goal=Esc_goal, years=years,
gen_lag=gen_lag, F_state_forecast_method=F_state_forecast_method, run_forecast_method=run_forecast_method)
#Perform Tier 1 Calculations
Tier_1_Table <- Tier_1_fun(y_obj=y_obj,
C_total=C_total, C_EEZ=C_EEZ,F_EEZ = F_EEZ, MFMT = MFMT,sib_forecast=sib_forecast,
ACL= ACL,Run=Run, Esc=Esc, Esc_goal=Esc_goal, years=years, ACL_buffer=buffer$buffer, preseason = preseason, postseason=postseason,
gen_lag=gen_lag, F_state_forecast_method=F_state_forecast_method, run_forecast_method=run_forecast_method)
#Perform Tier 3 Caclulations
Tier_3_Table <- Tier_3_fun(C_total=C_total , C_EEZ=C_EEZ, OFL=OFL, years=years,
gen_lag=gen_lag, y_obj=y_obj, buffer=tier_3_buff, catch_lag = nrow(Table), preseason=preseason, postseason=postseason)
buffer
#Lukas DeFilippo, lukas.defilippo@noaa.gov, 781-572-8865
#11/21/2023
#The purpose of this script is to produce annual calculations for the Cook Inlet SAFE report for UCI Coho (Tier 1 + Tier 3)
#Includes:
#(1) forecasting unknown quantities (i.e. run size, state harvest)
#(2) producing preseason and postseason management quantities as dictated in the FMP
#(3) determining appropriate buffers for management quantities
#Load packages
library(forecast)
library(car)
library(boot)
source('Cook_Inlet_functions.R')
#Load Data
stock <- 'UCI Coho'
Table <- read.csv(file=paste0(getwd(),'/',stock,'/', 'Table.csv'))
#Function arguments
ACL_buffer_window <- 10
gen_lag <- 4
y_obj <- 2021
preseason <- TRUE
postseason <- TRUE
F_state_forecast_method <- 'arima' #naive, or arima
run_forecast_method <- 'arima' #sibling or arima
tier_3_buff <- 0.9
#Data inputs
C_total=Table['Total.Catch']
C_EEZ=Table['EEZ.Catch']
F_EEZ = Table$FEEZ
MFMT = Table$MFMT
ACL= Table$ACL
Run=Table['Total.Run']
Esc=Table['Total.Esc']
Esc_goal=Table['Esc.Goal']
years=Table['Year']
sib_forecast <- NULL
#Calculate ACL Buffer
#Now execute the buffer function to emprically determine the buffer based on retrospective skill
buffer <- buffer_fun(ACL_buffer_window=ACL_buffer_window, y_obj=y_obj, sib_forecast=sib_forecast,
C_total=C_total, C_EEZ=C_EEZ,F_EEZ = F_EEZ, MFMT = MFMT,
ACL= ACL,Run=Run, Esc=Esc, Esc_goal=Esc_goal, years=years,
gen_lag=gen_lag, F_state_forecast_method=F_state_forecast_method, run_forecast_method=run_forecast_method)
buffer
#Perform Tier 1 Calculations
Tier_1_Table <- Tier_1_fun(y_obj=y_obj,
C_total=C_total, C_EEZ=C_EEZ,F_EEZ = F_EEZ, MFMT = MFMT,sib_forecast=sib_forecast,
ACL= ACL,Run=Run, Esc=Esc, Esc_goal=Esc_goal, years=years, ACL_buffer=buffer$buffer, preseason = preseason, postseason=postseason,
gen_lag=gen_lag, F_state_forecast_method=F_state_forecast_method, run_forecast_method=run_forecast_method)
#Perform Tier 3 Caclulations
Tier_3_Table <- Tier_3_fun(C_total=C_total , C_EEZ=C_EEZ, OFL=OFL, years=years,
gen_lag=gen_lag, y_obj=y_obj, buffer=tier_3_buff, catch_lag = nrow(Table), preseason=preseason, postseason=postseason)
#Lukas DeFilippo, lukas.defilippo@noaa.gov, 781-572-8865
#11/21/2023
#The purpose of this script is to produce annual calculations for the Cook Inlet SAFE report for Upper Cook Inlet Chum salmon (Tier 3 only)
#Includes:
#(1) forecasting unknown quantities (i.e. run size, state harvest)
#(2) producing preseason and postseason management quantities as dictated in the FMP
#(3) determining appropriate buffers for management quantities
#Load packages
library(forecast)
library(car)
library(boot)
source('Cook_Inlet_functions.R')
#Load Data
stock <- 'UCI Chum'
Table <- read.csv(file=paste0(getwd(),'/',stock,'/', 'Table.csv'))
#Function arguments
gen_lag <- 4
y_obj <- 2021
preseason <- TRUE
postseason <- TRUE
tier_3_buff <- 0.9
#Data inputs
C_total=Table['Total.Catch']
C_EEZ=Table['EEZ.Catch']
years=Table['Year']
#Perform Tier 3 Caclulations
Tier_3_Table <- Tier_3_fun(C_total=C_total , C_EEZ=C_EEZ, OFL=OFL, years=years,
gen_lag=gen_lag, y_obj=y_obj, buffer=tier_3_buff, catch_lag = nrow(Table), preseason=preseason, postseason=postseason)
#Lukas DeFilippo, lukas.defilippo@noaa.gov, 781-572-8865
#11/21/2023
#The purpose of this script is to produce annual calculations for the Cook Inlet SAFE report for Kenai sockeye (Tier 1 + Tier 3)
#Includes:
#(1) forecasting unknown quantities (i.e. run size, state harvest)
#(2) producing preseason and postseason management quantities as dictated in the FMP
#(3) determining appropriate buffers for management quantities
#Load packages
library(forecast)
library(car)
library(boot)
source('Cook_Inlet_functions.R')
#Load Data
stock <- 'Kenai Sockeye'
Data <- read.csv(file=paste0(getwd(),'/',stock,'/', 'Data.csv'))
Forecast <- read.csv(file=paste0(getwd(),'/',stock,'/', 'Forecasts.csv'))
Table <- read.csv(file=paste0(getwd(),'/',stock,'/', 'Table.csv'))
#Function arguments
ACL_buffer_window <- 10
gen_lag <- 5
y_obj <- 2021
preseason <- TRUE
postseason <- TRUE
F_state_forecast_method <- 'arima' #naive, or arima
run_forecast_method <- 'sibling' #sibling or arima
tier_3_buff <- 0.9
#Data inputs
C_total=Table['Total.Kenai.R..Catch']
C_EEZ=Table['Kenai.R..EEZ.Catch']
F_EEZ = Table$FEEZ
MFMT = Table$MFMT
ACL= Table$ACL
Run=Table['Run']
Esc=Table['Escapement']
Esc_goal=Table['Lower.Bound.of.Goal']
years=Table['Year']
sib_forecast = Forecast$Kenai.Total.Run.Forecast[Forecast$Year==y_obj]/1000
#Calculate ACL Buffer
#Now execute the buffer function to emprically determine the buffer based on retrospective skill
buffer <- buffer_fun(ACL_buffer_window=ACL_buffer_window, y_obj=y_obj, sib_forecast=sib_forecast,
C_total=C_total, C_EEZ=C_EEZ,F_EEZ = F_EEZ, MFMT = MFMT,
ACL= ACL,Run=Run, Esc=Esc, Esc_goal=Esc_goal, years=years,
gen_lag=gen_lag, F_state_forecast_method=F_state_forecast_method, run_forecast_method=run_forecast_method)
#Lukas DeFilippo, lukas.defilippo@noaa.gov, 781-572-8865
#11/21/2023
#The purpose of this script is to produce annual calculations for the Cook Inlet SAFE report for Kenai sockeye (Tier 1 + Tier 3)
#Includes:
#(1) forecasting unknown quantities (i.e. run size, state harvest)
#(2) producing preseason and postseason management quantities as dictated in the FMP
#(3) determining appropriate buffers for management quantities
#Load packages
library(forecast)
library(car)
library(boot)
source('Cook_Inlet_functions.R')
#Load Data
stock <- 'Kenai Chinook'
Data <- read.csv(file=paste0(getwd(),'/',stock,'/', 'Data.csv'))
Forecast <- read.csv(file=paste0(getwd(),'/',stock,'/', 'Forecasts.csv'))
Table <- read.csv(file=paste0(getwd(),'/',stock,'/', 'Table.csv'))
#Function arguments
ACL_buffer_window <- 10
gen_lag <- 6
y_obj <- 2021
preseason <- TRUE
postseason <- TRUE
F_state_forecast_method <- 'arima' #naive, or arima
run_forecast_method <- 'sibling' #sibling or arima
tier_3_buff <- 0.9
#Data inputs
C_total=Table['Total.Kenai.late.run.Catch']
C_EEZ=Table['Kenai.late.run.EEZ.Catch']
F_EEZ = Table$FEEZ
MFMT = Table$MFMT
ACL= Table$ACL
Run=Table['Run']
Esc=Table['Escapement']
Esc_goal=Table['Lower.Bound.of.Esc.Goal']
years=Table['Year']
sib_forecast = Forecast$Total.Run.Forecast[Forecast$Year==y_obj]
#Calculate ACL Buffer
#Now execute the buffer function to emprically determine the buffer based on retrospective skill
buffer <- buffer_fun(ACL_buffer_window=ACL_buffer_window, y_obj=y_obj, sib_forecast=sib_forecast,
C_total=C_total, C_EEZ=C_EEZ,F_EEZ = F_EEZ, MFMT = MFMT,
ACL= ACL,Run=Run, Esc=Esc, Esc_goal=Esc_goal, years=years,
gen_lag=gen_lag, F_state_forecast_method=F_state_forecast_method, run_forecast_method=run_forecast_method)
#Perform Tier 1 Calculations
Tier_1_Table <- Tier_1_fun(y_obj=y_obj, sib_forecast=sib_forecast,
C_total=C_total, C_EEZ=C_EEZ,F_EEZ = F_EEZ, MFMT = MFMT,
ACL= ACL,Run=Run, Esc=Esc, Esc_goal=Esc_goal, years=years, ACL_buffer=buffer$buffer, preseason = preseason, postseason=postseason,
gen_lag=gen_lag, F_state_forecast_method=F_state_forecast_method, run_forecast_method=run_forecast_method)
Tier_1_Table
#Lukas DeFilippo, lukas.defilippo@noaa.gov, 781-572-8865
#12/11/2023
#The purpose of this script is to read in disparate data sources to construct post-2021 harvest and escapement estimates for cook inlet salmon stocks
#1) 2022
#read in data
catch_dat_2022 <- read.csv('Complete_EEZ_StateWaterSplits_ToNMFS_2022_2022.csv')
catch_dat_2022 <- subset(catch_dat_2022, catch_dat_2022$DOL.Year==2022)
unique(catch_dat_2022$DOL.Year)
#By species, pull (a) total harvest, (b) EEZ harvest, (c) state harvest
species_vec <- unique(catch_dat_2022$Species)[1:5]
n_species <- length(species_vec)
catch_list <- replicate(length(species_vec), list(replicate(3, vector())))
for(i in 1:n_species){
# (a) total harvest
C_total <- as.numeric(catch_dat_2022$Number.Of.Animals..sum.[catch_dat_2022$Species==species_vec[i]])
catch_list[[i]][1] <- sum(C_total)
# (b) EEZ harvest
#C_EEZ <- as.numeric(catch_dat_2022$EEZ_Num[catch_dat_2022$Species==species_vec[i]]) #Using supplied EEZ numbers
C_EEZ <- C_total*catch_dat_2022$EEZ.[catch_dat_2022$Species==species_vec[i]] #Multiply total by EEZ fraction (ensures summation to total w state harvest)
catch_list[[i]][2] <- round(sum(C_EEZ), 0)
# (c) state harvest
#C_state <- (catch_dat_2022$StateWater_Num[catch_dat_2022$Species==species_vec[i]])
C_state <- C_total*catch_dat_2022$StateWater.[catch_dat_2022$Species==species_vec[i]]
catch_list[[i]][3] <- round(sum(C_state),0)
}
#For sockeye, need to get estimated proportions of (1) Kenai, (2) Kasilof, and (3) 'Other sockeye'
kenai_sock_prop_2022 <- 0.652
kasilof_sock_prop_2022 <- 0.087
other_sock_prop_2022 <- 1- (kenai_sock_prop_2022 + kasilof_sock_prop_2022)
#For Chinook, need to get estimated proportions of (1) Kenai late run, (2) 'Other Chinook'
kenai_chin_prop_2022 <- 0.402
other_chin_prop_2022 <- 1 - kenai_chin_prop_2022
catch_list
catch_dat_2022 <- read.csv('Complete_EEZ_StateWaterSplits_ToNMFS_2022_2022.csv')
View(catch_dat_2022)
i <- 1
catch_dat_2022$EEZ.[catch_dat_2022$Species==species_vec[i]]
mean(catch_dat_2022$EEZ.[catch_dat_2022$Species==species_vec[i]])
i <- 1
species_vec
catch_list[[i]][2]/catch_list[[i]][1]
sum(catch_list[[i]][2])/(catch_list[[i]][1])
sum(catch_list[[i]][2])
catch_list[[i]][2]
catch_list[[i]][1]
509334/895630
#Lukas DeFilippo, lukas.defilippo@noaa.gov, 781-572-8865
#12/11/2023
#The purpose of this script is to read in disparate data sources to construct post-2021 harvest and escapement estimates for cook inlet salmon stocks
#1) 2022
#read in data
catch_dat_2022 <- read.csv('Complete_EEZ_StateWaterSplits_ToNMFS_2022_2022.csv')
catch_dat_2022 <- subset(catch_dat_2022, catch_dat_2022$DOL.Year==2022)
unique(catch_dat_2022$DOL.Year)
#By species, pull (a) total harvest, (b) EEZ harvest, (c) state harvest
species_vec <- unique(catch_dat_2022$Species)[1:5]
n_species <- length(species_vec)
catch_list <- replicate(length(species_vec), list(replicate(3, vector())))
for(i in 1:n_species){
# (a) total harvest
C_total <- as.numeric(catch_dat_2022$Number.Of.Animals..sum.[catch_dat_2022$Species==species_vec[i]])
catch_list[[i]][1] <- sum(C_total)
# (b) EEZ harvest
#C_EEZ <- as.numeric(catch_dat_2022$EEZ_Num[catch_dat_2022$Species==species_vec[i]]) #Using supplied EEZ numbers
C_EEZ <- C_total*catch_dat_2022$EEZ.[catch_dat_2022$Species==species_vec[i]] #Multiply total by EEZ fraction (ensures summation to total w state harvest)
catch_list[[i]][2] <- round(sum(C_EEZ), 0)
# (c) state harvest
#C_state <- (catch_dat_2022$StateWater_Num[catch_dat_2022$Species==species_vec[i]])
C_state <- C_total*catch_dat_2022$StateWater.[catch_dat_2022$Species==species_vec[i]]
catch_list[[i]][3] <- round(sum(C_state),0)
}
#For sockeye, need to get estimated proportions of (1) Kenai, (2) Kasilof, and (3) 'Other sockeye'
kenai_sock_prop_2022 <- 0.652
kasilof_sock_prop_2022 <- 0.087
other_sock_prop_2022 <- 1- (kenai_sock_prop_2022 + kasilof_sock_prop_2022)
#For Chinook, need to get estimated proportions of (1) Kenai late run, (2) 'Other Chinook'
kenai_chin_prop_2022 <- 0.402
other_chin_prop_2022 <- 1 - kenai_chin_prop_2022
i <- 1
catch_list[[i]][2]
catch_list[[i]][1]
509334/895630
as.numeric(catch_dat_2022$EEZ_Num[catch_dat_2022$Species==species_vec[i]])
C_EEZ <- as.numeric(catch_dat_2022$EEZ_Num[catch_dat_2022$Species==species_vec[i]]) #Using supplied EEZ numbers
round(sum(C_EEZ), 0)
#Lukas DeFilippo, lukas.defilippo@noaa.gov, 781-572-8865
#12/11/2023
#The purpose of this script is to read in disparate data sources to construct post-2021 harvest and escapement estimates for cook inlet salmon stocks
#1) 2022
#read in data
catch_dat_2022 <- read.csv('Complete_EEZ_StateWaterSplits_ToNMFS_2022_2022.csv')
catch_dat_2022 <- subset(catch_dat_2022, catch_dat_2022$DOL.Year==2022)
unique(catch_dat_2022$DOL.Year)
#By species, pull (a) total harvest, (b) EEZ harvest, (c) state harvest
species_vec <- unique(catch_dat_2022$Species)[1:5]
n_species <- length(species_vec)
catch_list <- replicate(length(species_vec), list(replicate(3, vector())))
for(i in 1:n_species){
# (a) total harvest
C_total <- as.numeric(catch_dat_2022$Number.Of.Animals..sum.[catch_dat_2022$Species==species_vec[i]])
catch_list[[i]][1] <- sum(C_total)
# (b) EEZ harvest
C_EEZ <- as.numeric(catch_dat_2022$EEZ_Num[catch_dat_2022$Species==species_vec[i]]) #Using supplied EEZ numbers
#C_EEZ <- C_total*catch_dat_2022$EEZ.[catch_dat_2022$Species==species_vec[i]] #Multiply total by EEZ fraction (ensures summation to total w state harvest)
catch_list[[i]][2] <- round(sum(C_EEZ), 0)
# (c) state harvest
#C_state <- (catch_dat_2022$StateWater_Num[catch_dat_2022$Species==species_vec[i]])
C_state <- C_total*catch_dat_2022$StateWater.[catch_dat_2022$Species==species_vec[i]]
catch_list[[i]][3] <- round(sum(C_state),0)
}
#For sockeye, need to get estimated proportions of (1) Kenai, (2) Kasilof, and (3) 'Other sockeye'
kenai_sock_prop_2022 <- 0.652
kasilof_sock_prop_2022 <- 0.087
other_sock_prop_2022 <- 1- (kenai_sock_prop_2022 + kasilof_sock_prop_2022)
#For Chinook, need to get estimated proportions of (1) Kenai late run, (2) 'Other Chinook'
kenai_chin_prop_2022 <- 0.402
other_chin_prop_2022 <- 1 - kenai_chin_prop_2022
catch_list
species_vec
#Lukas DeFilippo, lukas.defilippo@noaa.gov, 781-572-8865
#12/11/2023
#The purpose of this script is to read in disparate data sources to construct post-2021 harvest and escapement estimates for cook inlet salmon stocks
#1) 2022
#read in data
catch_dat_2022 <- read.csv('Complete_EEZ_StateWaterSplits_ToNMFS_2022_2022.csv')
catch_dat_2022 <- subset(catch_dat_2022, catch_dat_2022$DOL.Year==2022)
unique(catch_dat_2022$DOL.Year)
#By species, pull (a) total harvest, (b) EEZ harvest, (c) state harvest
species_vec <- unique(catch_dat_2022$Species)[1:5]
n_species <- length(species_vec)
catch_list <- replicate(length(species_vec), list(replicate(5, vector())))
for(i in 1:n_species){
# (a) total harvest
C_total <- as.numeric(catch_dat_2022$Number.Of.Animals..sum.[catch_dat_2022$Species==species_vec[i]])
catch_list[[i]][1] <- sum(C_total)
# (b) EEZ harvest
C_EEZ <- as.numeric(catch_dat_2022$EEZ_Num[catch_dat_2022$Species==species_vec[i]]) #Using supplied EEZ numbers
#C_EEZ <- C_total*catch_dat_2022$EEZ.[catch_dat_2022$Species==species_vec[i]] #Multiply total by EEZ fraction (ensures summation to total w state harvest)
catch_list[[i]][2] <- round(sum(C_EEZ), 0)
# (c) state harvest
#C_state <- (catch_dat_2022$StateWater_Num[catch_dat_2022$Species==species_vec[i]])
C_state <- C_total*catch_dat_2022$StateWater.[catch_dat_2022$Species==species_vec[i]]
catch_list[[i]][3] <- round(sum(C_state),0)
#(d)EEZ fraction
catch_list[[i]][4] <-  C_EEZ/C_total
#(e) State fraction
catch_list[[i]][5] <-  C_state/C_total
}
#For sockeye, need to get estimated proportions of (1) Kenai, (2) Kasilof, and (3) 'Other sockeye'
kenai_sock_prop_2022 <- 0.652
kasilof_sock_prop_2022 <- 0.087
other_sock_prop_2022 <- 1- (kenai_sock_prop_2022 + kasilof_sock_prop_2022)
#For Chinook, need to get estimated proportions of (1) Kenai late run, (2) 'Other Chinook'
kenai_chin_prop_2022 <- 0.402
other_chin_prop_2022 <- 1 - kenai_chin_prop_2022
#Lukas DeFilippo, lukas.defilippo@noaa.gov, 781-572-8865
#12/11/2023
#The purpose of this script is to read in disparate data sources to construct post-2021 harvest and escapement estimates for cook inlet salmon stocks
#1) 2022
#read in data
catch_dat_2022 <- read.csv('Complete_EEZ_StateWaterSplits_ToNMFS_2022_2022.csv')
catch_dat_2022 <- subset(catch_dat_2022, catch_dat_2022$DOL.Year==2022)
unique(catch_dat_2022$DOL.Year)
#By species, pull (a) total harvest, (b) EEZ harvest, (c) state harvest
species_vec <- unique(catch_dat_2022$Species)[1:5]
n_species <- length(species_vec)
catch_list <- replicate(length(species_vec), list(replicate(5, vector())))
for(i in 1:n_species){
# (a) total harvest
C_total <- as.numeric(catch_dat_2022$Number.Of.Animals..sum.[catch_dat_2022$Species==species_vec[i]])
catch_list[[i]][1] <- sum(C_total)
# (b) EEZ harvest
C_EEZ <- as.numeric(catch_dat_2022$EEZ_Num[catch_dat_2022$Species==species_vec[i]]) #Using supplied EEZ numbers
#C_EEZ <- C_total*catch_dat_2022$EEZ.[catch_dat_2022$Species==species_vec[i]] #Multiply total by EEZ fraction (ensures summation to total w state harvest)
catch_list[[i]][2] <- round(sum(C_EEZ), 0)
# (c) state harvest
#C_state <- (catch_dat_2022$StateWater_Num[catch_dat_2022$Species==species_vec[i]])
C_state <- C_total*catch_dat_2022$StateWater.[catch_dat_2022$Species==species_vec[i]]
catch_list[[i]][3] <- round(sum(C_state),0)
#(d)EEZ fraction
catch_list[[i]][4] <-  catch_list[[i]][2]/catch_list[[i]][1]
#(e) State fraction
catch_list[[i]][5] <-  catch_list[[i]][3]/catch_list[[i]][1]
}
catch_list[[i]][1]
catch_list[[i]][2]
catch_list[[i]][2]/catch_list[[i]][1]
#Lukas DeFilippo, lukas.defilippo@noaa.gov, 781-572-8865
#12/11/2023
#The purpose of this script is to read in disparate data sources to construct post-2021 harvest and escapement estimates for cook inlet salmon stocks
#1) 2022
#read in data
catch_dat_2022 <- read.csv('Complete_EEZ_StateWaterSplits_ToNMFS_2022_2022.csv')
catch_dat_2022 <- subset(catch_dat_2022, catch_dat_2022$DOL.Year==2022)
unique(catch_dat_2022$DOL.Year)
#By species, pull (a) total harvest, (b) EEZ harvest, (c) state harvest
species_vec <- unique(catch_dat_2022$Species)[1:5]
n_species <- length(species_vec)
catch_list <- replicate(length(species_vec), list(replicate(5, vector())))
for(i in 1:n_species){
# (a) total harvest
C_total <- as.numeric(catch_dat_2022$Number.Of.Animals..sum.[catch_dat_2022$Species==species_vec[i]])
catch_list[[i]][1] <- sum(C_total)
# (b) EEZ harvest
C_EEZ <- as.numeric(catch_dat_2022$EEZ_Num[catch_dat_2022$Species==species_vec[i]]) #Using supplied EEZ numbers
#C_EEZ <- C_total*catch_dat_2022$EEZ.[catch_dat_2022$Species==species_vec[i]] #Multiply total by EEZ fraction (ensures summation to total w state harvest)
catch_list[[i]][2] <- round(sum(C_EEZ), 0)
# (c) state harvest
#C_state <- (catch_dat_2022$StateWater_Num[catch_dat_2022$Species==species_vec[i]])
C_state <- C_total*catch_dat_2022$StateWater.[catch_dat_2022$Species==species_vec[i]]
catch_list[[i]][3] <- round(sum(C_state),0)
#(d)EEZ fraction
catch_list[[i]][4] <-  round(sum(C_EEZ), 0)/sum(C_total)
#(e) State fraction
catch_list[[i]][5] <-   round(sum(C_state),0)/sum(C_total)
}
catch_list[[i]][5]
catch_list[[i]][4]
#Lukas DeFilippo, lukas.defilippo@noaa.gov, 781-572-8865
#12/11/2023
#The purpose of this script is to read in disparate data sources to construct post-2021 harvest and escapement estimates for cook inlet salmon stocks
#1) 2022
#read in data
catch_dat_2022 <- read.csv('Complete_EEZ_StateWaterSplits_ToNMFS_2022_2022.csv')
catch_dat_2022 <- subset(catch_dat_2022, catch_dat_2022$DOL.Year==2022)
unique(catch_dat_2022$DOL.Year)
#By species, pull (a) total harvest, (b) EEZ harvest, (c) state harvest
species_vec <- unique(catch_dat_2022$Species)[1:5]
n_species <- length(species_vec)
catch_list <- replicate(length(species_vec), list(replicate(5, vector())))
for(i in 1:n_species){
# (a) total harvest
C_total <- as.numeric(catch_dat_2022$Number.Of.Animals..sum.[catch_dat_2022$Species==species_vec[i]])
catch_list[[i]][1] <- sum(C_total)
# (b) EEZ harvest
C_EEZ <- as.numeric(catch_dat_2022$EEZ_Num[catch_dat_2022$Species==species_vec[i]]) #Using supplied EEZ numbers
#C_EEZ <- C_total*catch_dat_2022$EEZ.[catch_dat_2022$Species==species_vec[i]] #Multiply total by EEZ fraction (ensures summation to total w state harvest)
catch_list[[i]][2] <- round(sum(C_EEZ), 0)
# (c) state harvest
#C_state <- (catch_dat_2022$StateWater_Num[catch_dat_2022$Species==species_vec[i]])
C_state <- C_total*catch_dat_2022$StateWater.[catch_dat_2022$Species==species_vec[i]]
catch_list[[i]][3] <- round(sum(C_state),0)
#(d)EEZ fraction
catch_list[[i]][4] <-  round(sum(C_EEZ), 0)/sum(C_total)
#(e) State fraction
catch_list[[i]][5] <-   round(sum(C_state),0)/sum(C_total)
}
catch_list[[i]][4]
catch_list[[2]]
169*0.402
species_vec
89+87
#Lukas DeFilippo, lukas.defilippo@noaa.gov, 781-572-8865
#12/11/2023
#The purpose of this script is to read in disparate data sources to construct post-2021 harvest and escapement estimates for cook inlet salmon stocks
#1) 2022
#read in data
catch_dat_2022 <- read.csv('Complete_EEZ_StateWaterSplits_ToNMFS_2022_2022.csv')
catch_dat_2022 <- subset(catch_dat_2022, catch_dat_2022$DOL.Year==2022)
unique(catch_dat_2022$DOL.Year)
#By species, pull (a) total harvest, (b) EEZ harvest, (c) state harvest
species_vec <- unique(catch_dat_2022$Species)[1:5]
n_species <- length(species_vec)
catch_list <- replicate(length(species_vec), list(replicate(5, vector())))
for(i in 1:n_species){
# (a) total harvest
C_total <- as.numeric(catch_dat_2022$Number.Of.Animals..sum.[catch_dat_2022$Species==species_vec[i]])
catch_list[[i]][1] <- sum(C_total)
# (b) EEZ harvest
#C_EEZ <- as.numeric(catch_dat_2022$EEZ_Num[catch_dat_2022$Species==species_vec[i]]) #Using supplied EEZ numbers
C_EEZ <- C_total*catch_dat_2022$EEZ.[catch_dat_2022$Species==species_vec[i]] #Multiply total by EEZ fraction (ensures summation to total w state harvest)
catch_list[[i]][2] <- round(sum(C_EEZ), 0)
# (c) state harvest
#C_state <- (catch_dat_2022$StateWater_Num[catch_dat_2022$Species==species_vec[i]])
C_state <- C_total*catch_dat_2022$StateWater.[catch_dat_2022$Species==species_vec[i]]
catch_list[[i]][3] <- round(sum(C_state),0)
#(d)EEZ fraction
catch_list[[i]][4] <-  round(sum(C_EEZ), 0)/sum(C_total)
#(e) State fraction
catch_list[[i]][5] <-   round(sum(C_state),0)/sum(C_total)
}
catch_list
0.402*169
other_sock_prop_2022
0.261*895630
other_sock_prop_2022
#Lukas DeFilippo, lukas.defilippo@noaa.gov, 781-572-8865
#12/11/2023
#The purpose of this script is to read in disparate data sources to construct post-2021 harvest and escapement estimates for cook inlet salmon stocks
#1) 2022
#read in data
catch_dat_2022 <- read.csv('Complete_EEZ_StateWaterSplits_ToNMFS_2022_2022.csv')
catch_dat_2022 <- subset(catch_dat_2022, catch_dat_2022$DOL.Year==2022)
unique(catch_dat_2022$DOL.Year)
#By species, pull (a) total harvest, (b) EEZ harvest, (c) state harvest
species_vec <- unique(catch_dat_2022$Species)[1:5]
n_species <- length(species_vec)
catch_list <- replicate(length(species_vec), list(replicate(5, vector())))
for(i in 1:n_species){
# (a) total harvest
C_total <- as.numeric(catch_dat_2022$Number.Of.Animals..sum.[catch_dat_2022$Species==species_vec[i]])
catch_list[[i]][1] <- sum(C_total)
# (b) EEZ harvest
#C_EEZ <- as.numeric(catch_dat_2022$EEZ_Num[catch_dat_2022$Species==species_vec[i]]) #Using supplied EEZ numbers
C_EEZ <- C_total*catch_dat_2022$EEZ.[catch_dat_2022$Species==species_vec[i]] #Multiply total by EEZ fraction (ensures summation to total w state harvest)
catch_list[[i]][2] <- round(sum(C_EEZ), 0)
# (c) state harvest
#C_state <- (catch_dat_2022$StateWater_Num[catch_dat_2022$Species==species_vec[i]])
C_state <- C_total*catch_dat_2022$StateWater.[catch_dat_2022$Species==species_vec[i]]
catch_list[[i]][3] <- round(sum(C_state),0)
#(d)EEZ fraction
catch_list[[i]][4] <-  round(sum(C_EEZ), 0)/sum(C_total)
#(e) State fraction
catch_list[[i]][5] <-   round(sum(C_state),0)/sum(C_total)
}
catch_list[[1]]
catch_list
species_vec
other_sock_prop_2022
exp(3.1)
exp(2.95)
